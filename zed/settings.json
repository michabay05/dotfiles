// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
{
    "theme": "One Dark",
    "agent": {
        "default_profile": "minimal",
        "inline_assistant_model": {
            "provider": "copilot_chat",
            "model": "claude-sonnet-4"
        },
        "default_model": {
            "provider": "copilot_chat",
            "model": "claude-sonnet-4"
        }
    },

    "vim_mode": true,
    "vim": {
        "use_system_clipboard": "never",
        "use_smartcase_find": true,
        "toggle_relative_line_numbers": true
    },

    "show_wrap_guides": true,
    "wrap_guides": [100],
    "scroll_sensitivity": 0.8,

    "buffer_font_family": "Iosevka",
    "buffer_font_size": 18,
    "buffer_font_weight": 400,
    "buffer_font_features": {
        "calt": false
    },
    "buffer_line_height": "comfortable",
    "tab_size": 4,
    "telemetry": {
        "diagnostics": false,
        "metrics": false
    },

    "languages": {
        "C++": {
            "formatter": {
                "external": {
                    "command": "clang-format"
                    // "arguments": ["-i", "."]
                }
            }
        },

        "Python": {
            "language_servers": ["!pylsp", "pyright"]
        }
    },



    "lsp": {
        "rust-analyzer": {
            "initialization_options": {
                // get more cargo-less diagnostics from rust-analyzer,
                // which might include false-positives (those can be turned off by their names)
                "diagnostics": {
                    "experimental": {
                        "enable": true
                    }
                },
                // To disable the checking entirely
                // (ignores all cargo and check settings below)
                "checkOnSave": false,
                // To check the `lib` target only.
                "cargo": {
                    "allTargets": false
                },
                // Use `-p` instead of `--workspace` for cargo check
                "check": {
                    "workspace": false
                }
            }
        }
    },
    "format_on_save": "off"
}
